{"version":3,"sources":["Form/index.js","Tasks/index.js","Buttons/index.js","Section/index.js","Container/index.js","Header/index.js","App.js","reportWebVitals.js","index.js"],"names":["Form","className","name","placeholder","autoFocus","required","Tasks","tasks","hideDoneTasks","done","map","id","content","Buttons","length","disabled","every","Section","header","buttonsContainer","formContainer","tasksContainer","Container","children","Header","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAgBeA,EAdF,kBACT,uBAAMC,UAAU,gBAAhB,UACI,uBACIC,KAAK,yBACLD,UAAU,iBACVE,YAAY,wBACZC,WAAS,EACTC,UAAQ,IAEZ,wBAAQJ,UAAU,yBAAlB,+BCcOK,G,MAvBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,EAAyBC,KAAzB,OACV,qBAAKR,UAAU,0BAAf,SACI,oBAAIA,UAAU,qBAAd,SACKM,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,GAAIF,EAAP,EAAOA,KAAMG,EAAb,EAAaA,QAAb,OACP,qBACIX,UAAS,iCAA4BO,GAAiBC,EAAO,iCAAmC,IADpG,UAGI,wBAAQR,UAAS,mDAAjB,SACKQ,EAAO,SAAM,KAElB,sBAAMR,UAAS,wBAAmBQ,EAAO,2BAA6B,IAAtE,SACKG,IAEL,wBAAQX,UAAS,mDAAjB,4BATKU,YCaVE,G,MAhBC,SAAC,GAAD,IAAGN,EAAH,EAAGA,MAAOC,EAAV,EAAUA,cAAV,OACZD,EAAMO,OAAS,GACX,sBAAKb,UAAU,4BAAf,UACI,wBACIA,UAAU,gDADd,UAEuB,IAAlBO,EAAyB,4BAAoB,yBAElD,wBACIP,UAAU,iDACVc,SAAUR,EAAMS,OAAM,qBAAGP,QAF7B,wCCGGQ,G,MAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,iBAAkBC,EAA7B,EAA6BA,cAAeC,EAA5C,EAA4CA,eAA5C,OACZ,0BAASpB,UAAU,UAAnB,UACI,sBAAKA,UAAU,qBAAf,UACI,oBAAIA,UAAU,kBAAd,SAAiCiB,IAChCC,KAEJC,EACAC,OCDMC,G,MANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACd,sBAAMtB,UAAU,YAAhB,SACKsB,MCEMC,EANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACX,iCACI,6BAAKA,OCKPlB,EAAQ,CACZ,CAAEI,GAAI,EAAGC,QAAS,+CAAsCH,MAAM,GAC9D,CAAEE,GAAI,EAAGC,QAAS,oCAAgCH,MAAM,IA0B3CiB,MArBf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CACED,MAAM,qBAER,cAAC,EAAD,CACEP,OAAO,qBACPE,cAAe,cAAC,EAAD,MAEjB,cAAC,EAAD,CACEF,OAAO,mBACPC,iBAAkB,cAAC,EAAD,CAASZ,MAAOA,EAAOC,cAd3B,QAeda,eACE,cAAC,EAAD,CAAOd,MAAOA,EAAOC,cAhBT,cCAPmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.39de5cd0.chunk.js","sourcesContent":["import \"./style.css\";\r\n\r\nconst Form = () => (\r\n    <form className=\"section__form\">\r\n        <input\r\n            name=\"section__newTaskButton\"\r\n            className=\"section__input\"\r\n            placeholder=\"Co jest do zrobienia?\"\r\n            autoFocus\r\n            required\r\n        />\r\n        <button className=\"section__newTaskButton\">Dodaj zadanie</button>\r\n    </form>\r\n);\r\n\r\n\r\nexport default Form;","import \"./style.css\";\r\n\r\nconst Tasks = ({ tasks, hideDoneTasks, done }) => (\r\n    <div className=\"section__tasksContainer\">\r\n        <ul className=\"section__tasksList\">\r\n            {tasks.map(({ id, done, content }) => (\r\n                <li key={id}\r\n                    className={`section__tasksListItem ${hideDoneTasks && done ? \"section__tasksListItem--hidden\" : \"\"}`}\r\n                >\r\n                    <button className={`section__taskButton section__taskButton--checked`}>\r\n                        {done ? \"âœ”\" : \"\"}\r\n                    </button>\r\n                    <span className={`section__task ${done ? \"section__task--completed\" : \"\"}`}>\r\n                        {content}\r\n                    </span>\r\n                    <button className={`section__taskButton section__taskButton--deleted`}>\r\n                        ðŸ—‘\r\n                    </button>\r\n                </li>\r\n            ))\r\n            }\r\n        </ul >\r\n    </div>\r\n);\r\n\r\nexport default Tasks;\r\n","\r\nimport \"./style.css\";\r\n\r\nconst Buttons = ({ tasks, hideDoneTasks }) => (\r\n    tasks.length > 0 && (\r\n        <div className=\"section__buttonsContainer\">\r\n            <button\r\n                className=\"section__buttons section__buttons--leftButton\">\r\n                {hideDoneTasks === true ? \"PokaÅ¼ ukoÅ„czone\" : \"Ukryj ukoÅ„czone\"}\r\n            </button>\r\n            <button\r\n                className=\"section__buttons section__buttons--rightButton\"\r\n                disabled={tasks.every(({ done }) => done)}>\r\n                UkoÅ„cz wszystkie\r\n            </button>\r\n        </div>\r\n    )\r\n);\r\n\r\nexport default Buttons;","import \"./style.css\";\r\n\r\nconst Section = ({ header, buttonsContainer, formContainer, tasksContainer, }) => (\r\n    <section className=\"section\">\r\n        <div className=\"section__container\">\r\n            <h2 className=\"section__header\">{header}</h2>\r\n            {buttonsContainer}\r\n        </div>\r\n        {formContainer}\r\n        {tasksContainer}\r\n    </section>\r\n);\r\n\r\nexport default Section;","import \"./style.css\"\r\n\r\nconst Container = ({ children }) => (\r\n    <main className=\"container\">\r\n        {children}\r\n    </main>\r\n);\r\n\r\nexport default Container;","const Header = ({ title }) => (\r\n    <header>\r\n        <h1>{title}</h1>\r\n    </header>\r\n);\r\n\r\nexport default Header;\r\n","import Form from \"./Form\";\r\nimport Tasks from \"./Tasks\";\r\nimport Buttons from \"./Buttons\";\r\nimport Section from \"./Section\";\r\nimport Container from \"./Container\";\r\nimport Header from \"./Header\";\r\n\r\nconst tasks = [\r\n  { id: 1, content: \"ZabraÄ‡ siÄ™ za zadanie z tygodnia 8\", done: true },\r\n  { id: 2, content: \"OdrobiÄ‡ zadanie z tygodnia 8\", done: false },\r\n];\r\n\r\nconst hideDoneTasks = false;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Header\r\n        title=\"Lista zadaÅ„\"\r\n      />\r\n      <Section\r\n        header=\"Dodaj nowe zadanie\"\r\n        formContainer={<Form />}\r\n      />\r\n      <Section\r\n        header=\"Lista zadaÅ„\"\r\n        buttonsContainer={<Buttons tasks={tasks} hideDoneTasks={hideDoneTasks} />}\r\n        tasksContainer={\r\n          <Tasks tasks={tasks} hideDoneTasks={hideDoneTasks} />\r\n        }\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}